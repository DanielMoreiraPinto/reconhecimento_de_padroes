# Form implementation generated from reading ui file 'interface-pyqt.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6.QtWidgets import QGraphicsScene, QGraphicsView, QPushButton, QFileDialog, \
    QWidget, QLabel, QPushButton, QSizePolicy, QStatusBar, QApplication, QMainWindow
from PyQt6.QtGui import QPixmap
from PyQt6.QtCore import Qt, QRect, QMetaObject, QCoreApplication
from view import View


class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1100, 700)
        MainWindow.setFixedSize(1100, 700)

        self.centralwidget = QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.scene_img_original = QGraphicsScene()
        self.view_img_original = View(parent=self.centralwidget)
        self.view_img_original.setGeometry(QRect(20, 50, 440, 540))  
        self.view_img_original.setScene(self.scene_img_original)
        self.view_img_original.setObjectName("view_img_original")

        self.scene_img_resultante = QGraphicsScene()
        self.view_img_resultante = View(parent=self.centralwidget)
        self.view_img_resultante.setGeometry(QRect(470, 50, 440, 540))
        self.view_img_resultante.setScene(self.scene_img_resultante)
        self.view_img_resultante.setObjectName("view_img_resultante")

        ## para mover e dar zoom nas duas views ao mesmo tempo
        self.view_img_original.zoom_signal.connect(self.apply_zoom)
        self.view_img_resultante.zoom_signal.connect(self.apply_zoom)
        self.view_img_original.move_signal.connect(self.apply_movement)
        self.view_img_resultante.move_signal.connect(self.apply_movement)

        self.pushButton = QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QRect(930, 210, 140, 30))
        self.pushButton.setObjectName("pushButton")
        self.label = QLabel(parent=self.centralwidget)
        self.label.setGeometry(QRect(160, 610, 200, 50))
        self.label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QRect(620, 610, 200, 50))
        self.label_2.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QPushButton(parent=self.centralwidget)
        self.pushButton_2.setGeometry(QRect(930, 110, 140, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.on_botao_resultante_clicked)
        self.pushButton_3 = QPushButton(parent=self.centralwidget)
        self.pushButton_3.setGeometry(QRect(930, 70, 140, 30))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.on_botao_originao_clicked)
        self.label_3 = QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QRect(930, 170, 91, 31))
        self.label_3.setObjectName("label_3")
        self.pushButton_4 = QPushButton(parent=self.centralwidget)
        self.pushButton_4.setGeometry(QRect(930, 250, 140, 30))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QPushButton(parent=self.centralwidget)
        self.pushButton_5.setGeometry(QRect(930, 290, 140, 30))
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QPushButton(parent=self.centralwidget)
        self.pushButton_6.setGeometry(QRect(930, 330, 140, 30))
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_4 = QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QRect(160, 20, 161, 16))
        self.label_4.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QRect(620, 20, 161, 16))
        self.label_5.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.label_5.setObjectName("label_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QMetaObject.connectSlotsByName(MainWindow)
    
    def load_image(self, scene):
        file_name, _ =  QFileDialog.getOpenFileName(self, 'Selecione uma imagem...', '.', 'Image files (*.jpg *.gif *.png *.jpeg)')
        if file_name:
            pixmap = QPixmap(file_name)
            if not pixmap.isNull():
                scene.clear()
                scene.addPixmap(pixmap)

    def on_botao_resultante_clicked(self):
        self.load_image(self.scene_img_resultante)
    
    def on_botao_originao_clicked(self):
        self.load_image(self.scene_img_original)

    def apply_zoom(self, zoom_factor):
        self.view_img_original.scale(zoom_factor, zoom_factor)
        self.view_img_resultante.scale(zoom_factor, zoom_factor)
    
    def apply_movement(self, move_factor_x, move_factor_y):
        self.view_img_original.horizontalScrollBar().setValue(move_factor_x)
        self.view_img_original.verticalScrollBar().setValue(move_factor_y)
        self.view_img_resultante.horizontalScrollBar().setValue(move_factor_x)
        self.view_img_resultante.verticalScrollBar().setValue(move_factor_y)

    def retranslateUi(self, MainWindow):
        _translate = QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Free AI Tools"))
        self.pushButton.setText(_translate("MainWindow", "Reduzir Ruído"))
        self.label.setText(_translate("MainWindow", "Nível de Comprometimento: "))
        self.label_2.setText(_translate("MainWindow", "Nível de Comprometimento: "))
        self.pushButton_2.setText(_translate("MainWindow", "Salvar Resultado"))
        self.pushButton_3.setText(_translate("MainWindow", "Carregar Imagem"))
        self.label_3.setText(_translate("MainWindow", "Ferramentas: "))
        self.pushButton_4.setText(_translate("MainWindow", "Reduzir Borrão"))
        self.pushButton_5.setText(_translate("MainWindow", "Aumentar Resolução"))
        self.pushButton_6.setText(_translate("MainWindow", "Transferir Estilo"))
        self.label_4.setText(_translate("MainWindow", "Imagem Original"))
        self.label_5.setText(_translate("MainWindow", "Imagem Resultante"))


if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    app.setStyleSheet("""
    QWidget {
        background-color: #333333;
        color: #ffffff;
    }
    QPushButton {
        background-color: #555555;
        color: #ffffff;
        border: none;
        padding: 5px;
    }
    QPushButton:hover {
        background-color: #666666;
    }
    """)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
